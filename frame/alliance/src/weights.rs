// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_alliance
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-10-11, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/substrate
// benchmark
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_alliance
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./frame/alliance/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_alliance.
pub trait WeightInfo {
	fn propose_proposed(b: u32, x: u32, y: u32, p: u32, ) -> Weight;
	fn vote(x: u32, y: u32, ) -> Weight;
	fn veto(p: u32, ) -> Weight;
	fn init_members(x: u32, y: u32, z: u32, ) -> Weight;
	fn set_rule() -> Weight;
	fn announce() -> Weight;
	fn remove_announcement() -> Weight;
	fn submit_candidacy() -> Weight;
	fn nominate_candidacy() -> Weight;
	fn approve_candidate() -> Weight;
	fn reject_candidate() -> Weight;
	fn elevate_ally() -> Weight;
	fn retire() -> Weight;
	fn kick_member() -> Weight;
	fn add_blacklist(n: u32, l: u32, ) -> Weight;
	fn remove_blacklist(n: u32, l: u32, ) -> Weight;
}

/// Weights for pallet_alliance using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Alliance Members (r:1 w:0)
	// Storage: AllianceMotion ProposalOf (r:1 w:1)
	// Storage: AllianceMotion Proposals (r:1 w:1)
	// Storage: AllianceMotion ProposalCount (r:1 w:1)
	// Storage: AllianceMotion Voting (r:0 w:1)
	fn propose_proposed(_b: u32, x: u32, y: u32, p: u32, ) -> Weight {
		(44_806_000 as Weight)
			// Standard Error: 65_000
			.saturating_add((7_000 as Weight).saturating_mul(x as Weight))
			// Standard Error: 2_000
			.saturating_add((34_000 as Weight).saturating_mul(y as Weight))
			// Standard Error: 2_000
			.saturating_add((301_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Alliance Members (r:2 w:0)
	// Storage: AllianceMotion Voting (r:1 w:1)
	fn vote(x: u32, y: u32, ) -> Weight {
		(33_851_000 as Weight)
			// Standard Error: 81_000
			.saturating_add((209_000 as Weight).saturating_mul(x as Weight))
			// Standard Error: 3_000
			.saturating_add((198_000 as Weight).saturating_mul(y as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Alliance Members (r:1 w:0)
	// Storage: AllianceMotion ProposalOf (r:1 w:1)
	// Storage: AllianceMotion Proposals (r:1 w:1)
	// Storage: AllianceMotion Voting (r:0 w:1)
	fn veto(p: u32, ) -> Weight {
		(30_478_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((320_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Alliance Members (r:3 w:3)
	// Storage: AllianceMotion Members (r:1 w:1)
	fn init_members(_x: u32, y: u32, z: u32, ) -> Weight {
		(40_162_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((166_000 as Weight).saturating_mul(y as Weight))
			// Standard Error: 2_000
			.saturating_add((144_000 as Weight).saturating_mul(z as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Alliance Rule (r:0 w:1)
	fn set_rule() -> Weight {
		(14_337_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Alliance Announcements (r:1 w:1)
	fn announce() -> Weight {
		(16_721_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Alliance Announcements (r:1 w:1)
	fn remove_announcement() -> Weight {
		(17_663_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Alliance AccountBlacklist (r:1 w:0)
	// Storage: Alliance Candidates (r:1 w:1)
	// Storage: Alliance Members (r:4 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Alliance DepositOf (r:0 w:1)
	fn submit_candidacy() -> Weight {
		(57_289_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Alliance Members (r:4 w:0)
	// Storage: Alliance AccountBlacklist (r:1 w:0)
	// Storage: Alliance Candidates (r:1 w:1)
	fn nominate_candidacy() -> Weight {
		(42_350_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Alliance Candidates (r:1 w:1)
	// Storage: Alliance Members (r:4 w:1)
	fn approve_candidate() -> Weight {
		(44_364_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Alliance Candidates (r:1 w:1)
	// Storage: Alliance Members (r:4 w:0)
	// Storage: Alliance DepositOf (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn reject_candidate() -> Weight {
		(69_210_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Alliance Members (r:3 w:2)
	// Storage: AllianceMotion Proposals (r:1 w:0)
	// Storage: AllianceMotion Members (r:0 w:1)
	// Storage: AllianceMotion Prime (r:0 w:1)
	fn elevate_ally() -> Weight {
		(41_348_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Alliance KickingMembers (r:1 w:0)
	// Storage: Alliance Members (r:3 w:1)
	// Storage: AllianceMotion Proposals (r:1 w:0)
	// Storage: Alliance DepositOf (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: AllianceMotion Members (r:0 w:1)
	// Storage: AllianceMotion Prime (r:0 w:1)
	fn retire() -> Weight {
		(58_139_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: Alliance KickingMembers (r:1 w:0)
	// Storage: Alliance Members (r:3 w:1)
	// Storage: AllianceMotion Proposals (r:1 w:0)
	// Storage: Alliance DepositOf (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: AllianceMotion Members (r:0 w:1)
	// Storage: AllianceMotion Prime (r:0 w:1)
	fn kick_member() -> Weight {
		(68_409_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: Alliance AccountBlacklist (r:1 w:1)
	// Storage: Alliance WebsiteBlacklist (r:1 w:1)
	fn add_blacklist(n: u32, l: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 6_000
			.saturating_add((2_590_000 as Weight).saturating_mul(n as Weight))
			// Standard Error: 2_000
			.saturating_add((194_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Alliance AccountBlacklist (r:1 w:1)
	// Storage: Alliance WebsiteBlacklist (r:1 w:1)
	fn remove_blacklist(n: u32, l: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 332_000
			.saturating_add((57_821_000 as Weight).saturating_mul(n as Weight))
			// Standard Error: 147_000
			.saturating_add((6_544_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Alliance Members (r:1 w:0)
	// Storage: AllianceMotion ProposalOf (r:1 w:1)
	// Storage: AllianceMotion Proposals (r:1 w:1)
	// Storage: AllianceMotion ProposalCount (r:1 w:1)
	// Storage: AllianceMotion Voting (r:0 w:1)
	fn propose_proposed(_b: u32, x: u32, y: u32, p: u32, ) -> Weight {
		(44_806_000 as Weight)
			// Standard Error: 65_000
			.saturating_add((7_000 as Weight).saturating_mul(x as Weight))
			// Standard Error: 2_000
			.saturating_add((34_000 as Weight).saturating_mul(y as Weight))
			// Standard Error: 2_000
			.saturating_add((301_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
	// Storage: Alliance Members (r:2 w:0)
	// Storage: AllianceMotion Voting (r:1 w:1)
	fn vote(x: u32, y: u32, ) -> Weight {
		(33_851_000 as Weight)
			// Standard Error: 81_000
			.saturating_add((209_000 as Weight).saturating_mul(x as Weight))
			// Standard Error: 3_000
			.saturating_add((198_000 as Weight).saturating_mul(y as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Alliance Members (r:1 w:0)
	// Storage: AllianceMotion ProposalOf (r:1 w:1)
	// Storage: AllianceMotion Proposals (r:1 w:1)
	// Storage: AllianceMotion Voting (r:0 w:1)
	fn veto(p: u32, ) -> Weight {
		(30_478_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((320_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	// Storage: Alliance Members (r:3 w:3)
	// Storage: AllianceMotion Members (r:1 w:1)
	fn init_members(_x: u32, y: u32, z: u32, ) -> Weight {
		(40_162_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((166_000 as Weight).saturating_mul(y as Weight))
			// Standard Error: 2_000
			.saturating_add((144_000 as Weight).saturating_mul(z as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
	// Storage: Alliance Rule (r:0 w:1)
	fn set_rule() -> Weight {
		(14_337_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Alliance Announcements (r:1 w:1)
	fn announce() -> Weight {
		(16_721_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Alliance Announcements (r:1 w:1)
	fn remove_announcement() -> Weight {
		(17_663_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Alliance AccountBlacklist (r:1 w:0)
	// Storage: Alliance Candidates (r:1 w:1)
	// Storage: Alliance Members (r:4 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Alliance DepositOf (r:0 w:1)
	fn submit_candidacy() -> Weight {
		(57_289_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(7 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	// Storage: Alliance Members (r:4 w:0)
	// Storage: Alliance AccountBlacklist (r:1 w:0)
	// Storage: Alliance Candidates (r:1 w:1)
	fn nominate_candidacy() -> Weight {
		(42_350_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(6 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Alliance Candidates (r:1 w:1)
	// Storage: Alliance Members (r:4 w:1)
	fn approve_candidate() -> Weight {
		(44_364_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: Alliance Candidates (r:1 w:1)
	// Storage: Alliance Members (r:4 w:0)
	// Storage: Alliance DepositOf (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn reject_candidate() -> Weight {
		(69_210_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(7 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	// Storage: Alliance Members (r:3 w:2)
	// Storage: AllianceMotion Proposals (r:1 w:0)
	// Storage: AllianceMotion Members (r:0 w:1)
	// Storage: AllianceMotion Prime (r:0 w:1)
	fn elevate_ally() -> Weight {
		(41_348_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
	// Storage: Alliance KickingMembers (r:1 w:0)
	// Storage: Alliance Members (r:3 w:1)
	// Storage: AllianceMotion Proposals (r:1 w:0)
	// Storage: Alliance DepositOf (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: AllianceMotion Members (r:0 w:1)
	// Storage: AllianceMotion Prime (r:0 w:1)
	fn retire() -> Weight {
		(58_139_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(7 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	// Storage: Alliance KickingMembers (r:1 w:0)
	// Storage: Alliance Members (r:3 w:1)
	// Storage: AllianceMotion Proposals (r:1 w:0)
	// Storage: Alliance DepositOf (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: AllianceMotion Members (r:0 w:1)
	// Storage: AllianceMotion Prime (r:0 w:1)
	fn kick_member() -> Weight {
		(68_409_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(7 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	// Storage: Alliance AccountBlacklist (r:1 w:1)
	// Storage: Alliance WebsiteBlacklist (r:1 w:1)
	fn add_blacklist(n: u32, l: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 6_000
			.saturating_add((2_590_000 as Weight).saturating_mul(n as Weight))
			// Standard Error: 2_000
			.saturating_add((194_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: Alliance AccountBlacklist (r:1 w:1)
	// Storage: Alliance WebsiteBlacklist (r:1 w:1)
	fn remove_blacklist(n: u32, l: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 332_000
			.saturating_add((57_821_000 as Weight).saturating_mul(n as Weight))
			// Standard Error: 147_000
			.saturating_add((6_544_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
}
